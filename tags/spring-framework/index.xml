<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring-framework on Jparangdev&#39;s blog</title>
    <link>/tags/spring-framework/</link>
    <description>Recent content in spring-framework on Jparangdev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jan 2021 21:23:00 +0900</lastBuildDate><atom:link href="/tags/spring-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>콩(Bean) 이야기</title>
      <link>/posts/spring/bean/</link>
      <pubDate>Sat, 02 Jan 2021 21:23:00 +0900</pubDate>
      
      <guid>/posts/spring/bean/</guid>
      <description>Spring의 콩(bean)에 대해 알아보자
물론 이 콩이 아니다.그럼.. Bean이 뭔데? 간단히 말하면 스프링프레임워크에서 사용하는 자바의 객체를 Bean이라 할 수 있다. 다만 Spring IoC Container(컨테이너)에서 관리되기 때문에 자바객체와 다르게 Bean(빈)이라 말한다. Xml이나 어노테이션을 이용해 메타데이터를 설정하면 컨테이너는 이를 확인해서 빈을 생성하고 해당 빈의 라이프 사이클을 관리하며 필요한 부분에 주입하여 의존성을 관리한다.
이 콩도 아니다 이 콩도 아니다그럼 왜 굳이 Bean을 사용하는가?
스프링에서 개발자는 의존성 주입과 객채의 생성과 소멸은 컨테이너가 해줄테니 개발에 집중할 수 해주는 것이 목적이다.</description>
    </item>
    
  </channel>
</rss>
