<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jparangdev</title>
    
    
    
    <link>/posts/</link>
    <description>Recent content in Posts on Jparangdev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>github.io 블로그 만들기 - 1</title>
      <link>/posts/blog/hugo-1/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/blog/hugo-1/</guid>
      <description>
        
          
          
          
        
        
        
          기록은 힘이다 말이 있듯이 자신만의 지식 아카이브를 만들어 두는 것은 큰 도움이 된다. 다른사람에게 정보 전달의 목적도 있지만 나 자신의 생각을 정리하기 위해 블로그를 기록하기로 한다.
github는 간편하면서 무료로 호스팅을 한다. 다만, 정적인 페이지로만 생성이 가능
내가 만들 블로그의 경우는 방문자에게 정보 전달만이 목적이기에 Static Website로 구성 현재는 많은 개발자분들이 Github를 통해 블로그를 구축하는듯 하다
먼저 블로그를 구축하기전에 Git에 대한 기본적이 지식이 필요하다. Git에 대한 정보는 이미 웹에 많은 좋은 기록이 많기 때문에 따로 다루진 않는다.
          
        
        </description>
    </item>
    
    <item>
      <title>About Kafka - 1</title>
      <link>/posts/kafka/about-kafka-1/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/kafka/about-kafka-1/</guid>
      <description>
        
          
          
          
        
        
        
          1. What is Kafka ? https://www.confluent.io/blog/kafka-fastest-messaging-systemApache Kafka is an evnet streaming platform Kafka는 오픈소스 분산메세지 플랫폼입니다. 실시간으로 대량의 스트림(메세지)를 처리하는데 적합한 Messaging Queue(MQ)의 일종입니다. Kafka는 대용량의 메세지 처리가 필요한 링크드인에서 개발해 2011년 아파치의 공식 오픈소스로 공개되었습니다. 다른 분산 메세징 시스템에 비해 비교적 우수한 성능을 보여주어, 현재 많은 기업에서 사용하고 있습니다.
2. Kafka Process Kafka의 기본 구조Kafka는 기본적으로 Publish/Subscribe 구조를 사용합니다. Producer가 메세지를 발행(Publish)하면 Topic을 구독(Subscribe)하는 Consumer가 메세지를 소비합니다.
          
        
        </description>
    </item>
    
  </channel>
</rss>