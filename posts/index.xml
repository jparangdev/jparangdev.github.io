<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Jparagdev&#39;s blog</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Jparagdev&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 21 Jan 2021 21:00:00 +0900</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>github.io 블로그 만들기 - 2</title>
            <link>/posts/blog/hugo-2/</link>
            <pubDate>Thu, 21 Jan 2021 21:00:00 +0900</pubDate>
            
            <guid>/posts/blog/hugo-2/</guid>
            <description>이전 블로그에 이어 이번엔 테마를 설정해보도록 하겠다.
https://themes.gohugo.io/tags/blog/
위 페이지에 접속하여 원하는 테마를 골라보도록 하자. 일반적으로 모든 테마에서는 설치법과 기본적인 사용법이 개발자분들이 적어 놓은 경우가 많아 이를 참고하는것이 좋긴하다.
일단 내가 적용했던 방법을 기록해본다.
간편하게 생성했던 프로젝트 파일 themes 아래 서브모듈로 추가하거나 (테마제작자의 업데이트가 상관없는경우 가능)
$ git clone &amp;lt;테마 Git주소&amp;gt; themes/&amp;lt;테마이름&amp;gt; $ git submodule add &amp;lt;테마 Git주소&amp;gt; themes/&amp;lt;테마이름&amp;gt; 아니면 직접 다운받아 themes폴더 아래에 위치시켜주면 된다.
이후 config.toml파일을 각 테마에 맞게 수정해줘야한다.</description>
            <content type="html"><![CDATA[<p>이전 블로그에 이어 이번엔 테마를 설정해보도록 하겠다.</p>
<p><a href="https://themes.gohugo.io/tags/blog/">https://themes.gohugo.io/tags/blog/</a></p>
<p>위 페이지에 접속하여 원하는 테마를 골라보도록 하자. 
일반적으로 모든 테마에서는 설치법과 기본적인 사용법이 개발자분들이 적어 놓은 경우가 많아 이를 참고하는것이 좋긴하다.</p>
<p>일단 내가 적용했던 방법을 기록해본다.</p>
<p>간편하게 생성했던 프로젝트 파일 themes 아래 서브모듈로 추가하거나 (테마제작자의 업데이트가 상관없는경우 가능)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ git clone &lt;테마 Git주소&gt; themes/&lt;테마이름&gt;
$ git submodule add &lt;테마 Git주소&gt; themes/&lt;테마이름&gt;
</code></pre></div><p>아니면 직접 다운받아 themes폴더 아래에 위치시켜주면 된다.</p>
<p>이후 config.toml파일을 각 테마에 맞게 수정해줘야한다. 
테마별 사이트에 자세히 나와있어 맞게 수정하면 되며, 기본적으로 baseURL, Theme, Title 정도는 기본으로 설정해야 한다.</p>
<p>이제 시험삼아 Post를 하나 생성해보도록 하자</p>
<p>Hugo는 Content 아래의 폴더가 게시글이 되도록 기본적으로 설정되어 있다. 
나는 주제에 맞춰 혹은 시리즈에 맞춰 폴더를 생성하고 그아래 .md 파일을 하나 생성해서 글을 작성했다.</p>
<p>테마도 적용되었는지 확인하고 글도 잘올라갔는지 확인하려면 먼저 내컴퓨터에서 홈페이지를 기동해봐야한다. 
Intellij같은 툴을 쓰는경우 환경 설정을 통해 쉽게 본인 PC에 서버를 올릴 수 있고 shell을 통해 기동도 가능하다.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">$ hugo server -D
</code></pre></div><figure>
    <img src="/images/hugo/hugo-4.png"
         alt="hugo server"/> <figcaption>
            <p>해당화면처럼 빌드가 되면 가능</p>
        </figcaption>
</figure>

<p>이제 localhost:1313번에 접속해서 자신의 블로그를 확인해보도록 하자</p>
]]></content>
        </item>
        
        <item>
            <title>github.io 블로그 만들기 - 1</title>
            <link>/posts/blog/hugo-1/</link>
            <pubDate>Sun, 17 Jan 2021 20:45:00 +0900</pubDate>
            
            <guid>/posts/blog/hugo-1/</guid>
            <description>기록은 힘이다 말이 있듯이 자신만의 지식 아카이브를 만들어 두는 것은 큰 도움이 된다. 다른사람에게 정보 전달의 목적도 있지만 나 자신의 생각을 정리하기 위해 블로그를 기록하기로 한다.
github는 간편하면서 무료로 호스팅을 한다. 다만, 정적인 페이지로만 생성이 가능
내가 만들 블로그의 경우는 방문자에게 정보 전달만이 목적이기에 Static Website로 구성 현재는 많은 개발자분들이 Github를 통해 블로그를 구축하는듯 하다
먼저 블로그를 구축하기전에 Git에 대한 기본적이 지식이 필요하다. Git에 대한 정보는 이미 웹에 많은 좋은 기록이 많기 때문에 따로 다루진 않는다.</description>
            <content type="html"><![CDATA[<p>기록은 힘이다 말이 있듯이 자신만의 지식 아카이브를 만들어 두는 것은 큰 도움이 된다.
다른사람에게 정보 전달의 목적도 있지만 나 자신의 생각을 정리하기 위해 블로그를 기록하기로 한다.</p>
<p>github는 간편하면서 무료로 호스팅을 한다. 다만, 정적인 페이지로만 생성이 가능</p>
<p>내가 만들 블로그의 경우는 방문자에게 정보 전달만이 목적이기에 Static Website로 구성
현재는 많은 개발자분들이 Github를 통해 블로그를 구축하는듯 하다</p>
<p>먼저 블로그를 구축하기전에 Git에 대한 기본적이 지식이 필요하다.
Git에 대한 정보는 이미 웹에 많은 좋은 기록이 많기 때문에 따로 다루진 않는다.
대신 Opentutorials의 강의를 링크한다.<br>
<a href="https://opentutorials.org/course/2708">https://opentutorials.org/course/2708</a></p>
<p>나는 Hugo를 사용하여 블로그를 구성하기로 했다. 
Github.io에 Jekyll가 대표적이지만,
Jekyll에 비해 빌드속도가 빠르다는 점과 Go 언어를 사용한다는점이 매력적이라 생각해서 Hugo를 선택!</p>
<p>비록 Jekyll에 비해 메뉴얼도 템플릿도 부족한 듯 싶으나 일단 Hugo를 사용하기로 맘먹고 시작해보았다.
Hugo에 마음에 드는 테마가 있던 것도 한 몫했다.</p>
<p>먼저 Hugo는 <a href="https://gohugo.io/getting-started/installing/">https://gohugo.io/getting-started/installing/</a> 에서 OS별 설치 방법을 알 수 있고 
Git (<a href="https://github.com/gohugoio/hugo">https://github.com/gohugoio/hugo</a>) 에서 최신 Hugo를 다운받아 사용이 가능하다. OS는 Window 10에서 진행하였다.</p>
<p>Hugo를 다운받았다면 원하는 위치에서 압축을 풀고 bin폴더 안의 hugo.exe의 환경변수를 설정해주도록 한다.
<figure>
    <img src="/images/hugo/hugo-1.png"
         alt="hugo setting path"/> <figcaption>
            <p>윈도우의 시스템 환경설정</p>
        </figcaption>
</figure>
</p>
<p>이후 cmd를 통해 Hugo가 제대로 작동하는 지 확인한다.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">    $ hugo version
</code></pre></div><p>다음과 같은 화면이 나온다면 정상적으로 작동 된 것
<figure>
    <img src="/images/hugo/hugo-2.png"
         alt="hugo install"/> <figcaption>
            <p>Hugo 버전확인</p>
        </figcaption>
</figure>
</p>
<p>이제 블로그용 소스를 만들 위치에 hugo site파일을 만들어보도록 하자</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">    $ hugo new site C:<span style="color:#ae81ff">\j</span>aprangev<span style="color:#ae81ff">\t</span>estsite
</code></pre></div><p>해당 메세지가 출력되고 파일이 잘 생성된 것을 확인하였으면 기본적인 블로그 사이트 소스 생성이 된 것이다.</p>
<figure>
    <img src="/images/hugo/hugo-3.png"
         alt="hugo complete"/> <figcaption>
            <p>간략하게 테마적용법과 구동방법이 나온다</p>
        </figcaption>
</figure>

<p>다음으로 Git을 통해 형상관리가 가능하도록 원격 git을 연결하도록 하자
먼저 <a href="https://github.com">https://github.com</a> 으로 접속하여 저장소를 2개 생성해야한다.</p>
<ol>
<li>블로그 소스용 저장소</li>
<li>블로그가 게시될 Github.io 용 저장소</li>
</ol>
<p>new site로 생성한 블로그 소스를 원격 저장소에 연결해보자.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">    $ cd C:<span style="color:#ae81ff">\j</span>aprangev<span style="color:#ae81ff">\t</span>estsite
    $ git init
    $ git add .
    $ git commit -m <span style="color:#e6db74">&#34;first commit&#34;</span>
    $ git branch -M main
    $ git remote add origin https://github.com/jparangdev/testsite-src.git
    $ git push -u origin main
</code></pre></div><p>github에 접속해 해당 소스가 제대로 푸쉬가 되었는지 확인</p>
<p>여기까지 글을 마치고 다음에 테마를 연결해보자~~~~</p>
]]></content>
        </item>
        
    </channel>
</rss>
